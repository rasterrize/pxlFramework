name: Continuous Integration

on: [push, pull_request, workflow_dispatch]
  
jobs:
  build-debug:
    name: Build (Debug)
    runs-on: windows-latest

    steps:    
    - uses: actions/checkout@v4
      with:
        submodules: recursive
        token: ${{ secrets.PAT_TOKEN }}

    - name: Download and Install VulkanSDK
      run: |
        curl -O https://sdk.lunarg.com/sdk/download/latest/windows/vulkan_sdk.exe
        ./vulkan_sdk.exe --accept-licenses --default-answer --confirm-command install com.lunarg.vulkan.vma com.lunarg.vulkan.debug
        $SDK_VERSION = curl https://vulkan.lunarg.com/sdk/latest/windows.txt
        echo "VULKAN_SDK=C:/VulkanSDK/$SDK_VERSION" | Out-File -FilePath $env:GITHUB_ENV -Append

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config Debug

  build-release:
    name: Build (Release)
    runs-on: windows-latest

    steps:    
    - uses: actions/checkout@v4
      with:
        submodules: recursive
        token: ${{ secrets.PAT_TOKEN }}

    - name: Download and Install VulkanSDK
      run: |
        curl -O https://sdk.lunarg.com/sdk/download/latest/windows/vulkan_sdk.exe
        ./vulkan_sdk.exe --accept-licenses --default-answer --confirm-command install com.lunarg.vulkan.vma com.lunarg.vulkan.debug
        $SDK_VERSION = curl https://vulkan.lunarg.com/sdk/latest/windows.txt
        echo "VULKAN_SDK=C:/VulkanSDK/$SDK_VERSION" | Out-File -FilePath $env:GITHUB_ENV -Append

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config Release

